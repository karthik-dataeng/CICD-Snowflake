name: Snowflake CI/CD Workflow

on: workflow_dispatch
jobs:
  snowflake-connection:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install snowflake-connector-python

    - name: Debug Environment Variables for Dev
      env:
        SF_USER_NAME_DEV: ${{ secrets.SF_USER_NAME_DEV }}
        SF_WAREHOUSE_DEV: ${{ secrets.SF_WAREHOUSE_DEV }}
        SF_ACCOUNT_DEV: ${{ secrets.SF_ACCOUNT_DEV }}
        SF_SCHEMA_NAME_DEV: ${{ secrets.SF_SCHEMA_NAME_DEV }}
        SF_PASSWORD_DEV: ${{ secrets.SF_PASSWORD_DEV }}
      run: |
        echo "SF_USER_NAME_DEV: $SF_USER_NAME_DEV"
        echo "SF_WAREHOUSE_DEV: $SF_WAREHOUSE_DEV"
        echo "SF_ACCOUNT_DEV: $SF_ACCOUNT_DEV"
        echo "SF_SCHEMA_NAME_DEV: $SF_SCHEMA_NAME_DEV"
        echo "SF_PASSWORD_DEV is set: [${{ secrets.SF_PASSWORD_DEV != '' }}]"

    - name: Test Dev Environment Connection
      env:
        SF_USER_NAME_DEV: ${{ secrets.SF_USER_NAME_DEV }}
        SF_WAREHOUSE_DEV: ${{ secrets.SF_WAREHOUSE_DEV }}
        SF_ACCOUNT_DEV: ${{ secrets.SF_ACCOUNT_DEV }}
        SF_SCHEMA_NAME_DEV: ${{ secrets.SF_SCHEMA_NAME_DEV }}
        SF_PASSWORD_DEV: ${{ secrets.SF_PASSWORD_DEV }}
      run: |
        python - <<EOF
        import os
        import snowflake.connector

        try:
            # Retrieve environment variables for Dev environment
            user = os.getenv("SF_USER_NAME_DEV")
            warehouse = os.getenv("SF_WAREHOUSE_DEV")
            account = os.getenv("SF_ACCOUNT_DEV")
            schema = os.getenv("SF_SCHEMA_NAME_DEV")
            password = os.getenv("SF_PASSWORD_DEV")

            if not all([user, warehouse, account, schema, password]):
                raise ValueError("One or more environment variables are not set.")

            # Connect to Snowflake Dev environment
            conn = snowflake.connector.connect(
                user=user,
                password=password,
                account=account,
                warehouse=warehouse,
                database="your_database_name",  # Add the correct database name
                schema=schema
            )

            # Test the connection
            cursor = conn.cursor()
            cursor.execute("SELECT CURRENT_VERSION()")
            version = cursor.fetchone()
            print(f"Connected to Snowflake Dev. Version: {version[0]}")

            cursor.close()
            conn.close()
        except Exception as e:
            print(f"Failed to connect to Snowflake Dev: {e}")
            raise e
        EOF

        cursor.close()
        conn.close()
        EOF
